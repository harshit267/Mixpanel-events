<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Linked List With Events (Mixpanel)</title>
    <link href="https://fonts.googleapis.com/css2?family=Nunito&display=swap" rel="stylesheet">
    <!-- <link rel="stylesheet" href="/css/linklist-dark.css"> -->
    <link rel="stylesheet" href="/css/linklist-light.css">
</head>

<body>

    <h1>Mixpanel Event Viewer</h1>

    <!-- ====== Control Panel ====== -->
    <div class="control-panel">

        <div class="fetch-options">
            <label for="mode">Fetch Mode:</label>
            <select id="mode">
                <option value="relative">Relative</option>
                <option value="custom">Custom</option>
            </select>

            <div id="relative-selector">
                <label for="relative">Duration:</label>
                <select id="relative">
                    <option value="">-- Select Duration --</option> 
                </select>
            </div>

            <div id="custom-date" style="display:none;">
                <input type="date" id="from_date"> to 
                <input type="date" id="to_date">
            </div>

            <label for="device">Device:</label>
            <select id="device">
                <option value="">-- Select Device --</option> <!-- Will be filled from config -->
            </select>

            <button id="fetch-btn">Fetch Events</button>
        </div>

        <!-- ========= Search Box ========= -->
        <div class="search-box">
            <input type="text" id="search-input" placeholder="Search linked list...">
            <div id="no-result" class="no-result">No matching events found.</div>
        </div>
    </div>

    <!-- ========= LINKED LIST (Rendered by EJS immediately) ========= -->
    <div class="events-container" id="events-container">
        <button class="properties-button" id="toggle-props-btn" style="margin: 10px 0; padding: 5px 10px;">Show All Properties</button>
        <% linkedList.forEach(node => { %>
            <div class="event-block">
                <div class="seg-event">
                    <p><span class="prop-head">Interface:</span> <span class="interface-text"><%= node.Interface %></span></p>
                    <!-- <p><span class="prop-head">Identify:</span> <span class="identify-text"></span></p> -->
                    <% if (node.Props) { %>
                        <div class="props-schema">
                            <p><span class="prop-head">Props:</span></p>
                        
                            <% if (Array.isArray(node.Props.properties) && node.Props.properties.length > 0) { %>
                                <ul>
                                    <% node.Props.properties.forEach(prop => { %>
                                        <li>
                                            <strong><%= prop.name %><%= prop.optional ? " ?" : "" %>:</strong> 
                                            <% if (Array.isArray(prop.type)) { %>
                                                <%= prop.type.join(" | ") %>
                                            <% } else { %>
                                                <%= prop.type %>
                                            <% } %>
                                            <% if (prop.values) { %>
                                                : [<%= prop.values.join(", ") %>]
                                            <% } %>
                                        </li>
                                    <% }) %>
                                </ul>
                            <% } else { %>
                                <p>
                                    <strong>Props<%= node.Props.optional ? " ?" : "" %>:</strong> 
                                    <%= node.Props.type || "unknown" %>
                                </p>
                            <% } %>
                        </div>
                    <% } else { %>
                        <p><span class="prop-head">Props:</span> None</p>
                    <% } %>
                </div>

                <div class="mix-event">
                    <% node.LinkedList.forEach(event => { %>
                        <div class="linked-event" style="border: 2px solid <%= validator.getBorderColor(event.properties, node.Props) %>;">
                            <p><strong>Event:</strong> <%= event.name %></p>
                            <p><strong>Time:</strong> <%= new Date(event.time).toLocaleString('en-IN', { dateStyle: 'medium', timeStyle: 'short', timeZone: 'Asia/Kolkata' }) %></p>
                            <p><strong>Properties:</strong></p>
                            <% const keyColorMap = validator.getKeyIssueMap(event.properties, node.Props); %>
                            <ul class="event-properties">
                                <% Object.entries(event.properties || {}).forEach(([key, value]) => { %>
                                    <% if (key.startsWith('$')) { %>
                                        <li class="hidden-prop" style="display:none;">
                                            <strong><%= key %></strong>: <%= JSON.stringify(value) %>
                                        </li>
                                    <% } else { %>
                                        <% const color = keyColorMap[key] || 'Black'; %>
                                        <li>
                                            <strong style="color: <%= color %>"><%= key %></strong>: <%= JSON.stringify(value) %>
                                        </li>
                                    <% } %>
                                <% }) %>
                            </ul>
                            <% if(node.Props) { %>
                                <div>
                                    <%- validator.renderValidationHTML(event.properties, node.Props) %>
                                </div>
                            <% } %>
                        </div>
                    <% }) %>
                </div>
            </div>
        <% }) %>
    </div>

    <script src="/js/events.js"></script>
</body>

</html>
